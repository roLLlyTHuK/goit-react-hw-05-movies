{"version":3,"file":"static/js/921.90a27819.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/Gallery/Gallery.styled.js","components/Gallery/Gallery.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  width: 90vw;\n  height: 80vh;\n  margin: 20px auto;\n\n  li {\n    img {\n      border: 1px solid orange;\n      border-radius: 8px;\n      box-shadow: 0px 5px 5px lightgray;\n\n      transition: transform 0.3s ease-out; /* Анимация перехода */\n\n      &:hover {\n        box-shadow: 0 0 100px rgba(255, 165, 0, 0.8);\n\n        transform: scale(1.1);\n\n        background-color: rgba(255, 165, 0, 0.2);\n\n        color: orange;\n      }\n    }\n  }\n`;\n\nexport default List;\n","import { Link, useLocation } from 'react-router-dom';\nimport { INIT_POSTER_SIZE_500, INIT_PATH_IMAGE } from 'services/Api-request';\nimport List from './MoviesList.styled';\nimport svg from '../../Img/No-Image-Placeholder.svg.png';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies &&\n        movies.map(item => (\n          <li key={item.id} style={{ width: '250px' }}>\n            <Link to={`/movies/${item.id}`} state={{ from: location }}>\n              {item.poster_path && (\n                <img\n                  src={`${INIT_PATH_IMAGE}${INIT_POSTER_SIZE_500}${item.poster_path}`}\n                  width=\"250\"\n                  alt={item.title}\n                />\n              )}\n              {!item.poster_path && (\n                <div>\n                  <img src={svg} alt={item.title} width={250} height={375} />\n                </div>\n              )}\n            </Link>\n          </li>\n        ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 20px auto;\n  form {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    /* margin: 10px auto; */\n    width: 100%;\n    input {\n      width: 300px;\n      height: 60px;\n      border-radius: 5px 0 0 5px;\n      border: 1px solid gray;\n      border-right: none;\n      padding: 5px;\n      font-size: 20px;\n      background-color: transparent;\n      outline: none;\n      transition: 0.3s;\n      &:focus {\n        box-shadow: 0 0 10px rgba(255, 165, 0, 0.5);\n        text-shadow: 0 0 10px rgba(255, 165, 0, 0.5);\n        transition: 0.3s ease-in-out;\n        border: 1px solid orange;\n        border-right: none;\n        background-color: rgba(255, 165, 0, 0.2);\n        color: white;\n      }\n    }\n    button {\n      width: 60px;\n      height: 60px;\n      padding: 5px;\n      background-color: transparent;\n      border: 1px solid gray;\n      border-left: none;\n      border-radius: 0 5px 5px 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      cursor: pointer;\n      font-size: 20px;\n      color: black;\n    }\n    input:focus + button,\n    button:hover {\n      color: white;\n      transition: 0.3s ease-in-out;\n      transform-origin: center;\n      border-radius: 5px;\n      border: 1px solid orange;\n      border-left: none;\n      padding: 5px;\n      background-color: rgba(255, 165, 0, 0.2);\n      box-shadow: 0 0 10px rgba(255, 165, 0, 0.5);\n    }\n  }\n`;\n\nconst ErrorText = styled.div`\n  color: red;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nexport { Container, ErrorText };\n","import React, { useState } from 'react';\nimport { Container, ErrorText } from './SearchForm.styled';\nimport { FaSearch } from 'react-icons/fa';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [searchString, setSearchString] = useState('');\n  const [error, setError] = useState('');\n\n  const handleChange = e => {\n    setSearchString(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchString.trim() === '') {\n      setError('Search string is required');\n      return;\n    }\n\n    onSubmit(searchString.trim());\n    setError('');\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchString\"\n          value={searchString}\n          onChange={handleChange}\n          placeholder=\"Search movie\"\n        />\n        <button type=\"submit\">\n          <FaSearch />\n        </button>\n      </form>\n      {error && <ErrorText>{error}</ErrorText>}\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: block;\n  width: 96vw;\n  margin: 20px auto;\n  border: 1px solid orange;\n  border-radius: 8px;\n  padding: 0 20px;\n`;\n\nconst Item = styled.li`\n  img {\n    width: 320px;\n    transform: scale(0.9);\n    border: 1px solid orange;\n    border-radius: 8px;\n    box-shadow: 0px 5px 5px lightgray;\n    transition: 0.3s ease-in-out;\n    &:hover {\n      transform: scale(1);\n      transition: 0.3s ease-in-out;\n      background-color: rgba(255, 165, 0, 0.2);\n      box-shadow: 0 0 100px rgba(255, 165, 0, 0.8);\n      color: orange;\n    }\n    @media only screen and (max-width: 768px) {\n      width: 250px;\n    }\n    @media only screen and (max-width: 480px) {\n      width: 100%;\n    }\n  }\n`;\n\nexport { Container, Item };\n","import { Link, useLocation } from 'react-router-dom';\nimport { INIT_POSTER_SIZE_500, INIT_PATH_IMAGE } from 'services/Api-request';\nimport svg from '../../Img/No-Image-Placeholder.svg.png';\n\nimport Slider from 'react-slick';\nimport { Container, Item } from './Gallery.styled';\n\n// Import Swiper React components\n\nconst Gallery = ({ movies }) => {\n  const location = useLocation();\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 2000,\n    slidesToShow: 6,\n    slidesToScroll: 1,\n    initialSlide: 0,\n    autoplay: true,\n    autoplaySpeed: 2000,\n    pauseOnHover: true,\n    arrows: false,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1,\n          infinite: true,\n          dots: true,\n        },\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 1,\n          initialSlide: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          centerMode: true,\n        },\n      },\n    ],\n  };\n  return (\n    <Container>\n      <Slider {...settings}>\n        {movies &&\n          movies.map(item => (\n            <Item key={item.id} style={{ width: '250px' }}>\n              <Link to={`/movies/${item.id}`} state={{ from: location }}>\n                {item.poster_path && (\n                  <img\n                    src={`${INIT_PATH_IMAGE}${INIT_POSTER_SIZE_500}${item.poster_path}`}\n                    alt={item.title}\n                  />\n                )}\n                {!item.poster_path && (\n                  <div>\n                    <img src={svg} alt={item.title} width={250} height={375} />\n                  </div>\n                )}\n              </Link>\n            </Item>\n          ))}\n      </Slider>\n    </Container>\n  );\n};\n\nexport default Gallery;\n","import { searchMovies, upcomingMovies } from 'services/Api-request';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport Gallery from 'components/Gallery/Gallery';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState();\n  const [upcoming, setUpcoming] = useState();\n  const [dates, setDates] = useState({ maximum: '', minimum: '' });\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onSubmit = searchString => {\n    const searchParams = searchString !== '' ? { search: searchString } : {};\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const searchString = searchParams.get('search');\n\n    if (!searchString) {\n      const upcomingList = async abortController => {\n        try {\n          const list = await upcomingMovies(abortController);\n          setUpcoming(list.data.results);\n          setDates(list.data.dates);\n        } catch (error) {\n          if (error.message !== 'canceled') toast.error(error.message);\n        }\n      };\n\n      upcomingList(abortController);\n      return;\n    }\n\n    const searchList = async (searchString, abortController) => {\n      try {\n        const list = await searchMovies(searchString, abortController);\n        setMovies(list.data.results);\n      } catch (error) {\n        if (error.message !== 'canceled') toast.error(error.message);\n      }\n    };\n\n    searchList(searchString, abortController);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [searchParams]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={onSubmit} />\n      {movies && <MoviesList movies={movies} />}\n      {upcoming && (\n        <div>\n          <h1 style={{ textAlign: 'center' }}>\n            Movies that are being released\n          </h1>\n          <p style={{ textAlign: 'center', fontSize: '20px' }}>\n            in {dates.minimum} - {dates.maximum} :\n          </p>\n          <Gallery movies={upcoming} />\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","_ref","movies","location","useLocation","_jsx","List","children","map","item","style","width","_jsxs","Link","to","concat","id","state","from","poster_path","src","INIT_PATH_IMAGE","INIT_POSTER_SIZE_500","alt","title","svg","height","Container","ErrorText","_templateObject2","SearchForm","onSubmit","_useState","useState","_useState2","_slicedToArray","searchString","setSearchString","_useState3","_useState4","error","setError","e","preventDefault","trim","type","name","value","onChange","target","placeholder","FaSearch","Item","Slider","_objectSpread","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","autoplay","autoplaySpeed","pauseOnHover","arrows","responsive","breakpoint","settings","centerMode","setMovies","upcoming","setUpcoming","_useState5","maximum","minimum","_useState6","dates","setDates","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","abortController","AbortController","get","searchList","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee2","list","_context2","prev","next","searchMovies","sent","data","results","t0","message","toast","stop","_x2","_x3","apply","arguments","abort","upcomingList","_callee","_context","upcomingMovies","_x","search","MoviesList","textAlign","fontSize","Gallery"],"sourceRoot":""}
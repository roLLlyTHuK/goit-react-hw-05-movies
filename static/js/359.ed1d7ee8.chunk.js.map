{"version":3,"file":"static/js/359.ed1d7ee8.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.jsx","components/SearchList/SearchList.jsx","pages/Movies.jsx","services/Api-request.jsx"],"sourcesContent":["import { Formik, Field, Form } from 'formik';\nimport { object, string } from 'yup';\n\nlet schema = object({\n  searchString: string().required(),\n});\n\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = (values, actions) => {\n    onSubmit(values.searchString.trim());\n  };\n\n  return (\n    <Formik initialValues={{ searchString: '' }} onSubmit={handleSubmit} validationSchema={schema}>\n      <Form>\n        <Field type=\"text\" name=\"searchString\" />\n        <button type=\"submit\">Search</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nexport const SearchList = ({ movies, from }) => {\n  return (\n    <div>\n      <ul>\n        {movies.map(item => (\n          <li key={item.id}>\n            <Link to={`/movies/${item.id}`} state={{ from: from }}>\n              {item.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};","import { searchMovies } from 'services/Api-request';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { SearchList } from 'components/SearchList/SearchList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const onSubmit = searchString => {\n    const searchParams = searchString !== '' ? { search: searchString } : {};\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const searchString = searchParams.get('search');\n\n    if (!searchString) {\n      return;\n    }\n\n    const searchList = async (searchString, abortController) => {\n      try {\n        const list = await searchMovies(searchString, abortController);\n        setMovies(list.data.results);\n      } catch (error) {\n        if (error.message !== 'canceled') toast.error(error.message);\n      }\n    };\n\n    searchList(searchString, abortController);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [searchParams]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={onSubmit} />\n      {movies && <SearchList movies={movies} from={location} />}\n    </main>\n  );\n};\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = '275d01b8b22dae96d546b5217250e569'\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst INIT_LOGO_SIZE = 'w185';\nconst INIT_PATH_IMAGE = 'http://image.tmdb.org/t/p/';\nconst INIT_POSTER_SIZE_500 = 'w500';\nconst INIT_POSTER_SIZE_92 = 'w92';\n\nconst paramsObj = {\n  api_key: API_KEY,\n};\n\nconst getTrending = async abortController => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/trending/movie/day?${params}`, { signal: abortController.signal });\n};\n\nconst searchMovies = async (title, abortController) => {\n  const paramsObjSearch = {\n    ...paramsObj,\n    query: title,\n  };\n  const params = new URLSearchParams(paramsObjSearch);\n  return await axios.get(`/search/movie?${params}`, { signal: abortController.signal });\n};\n\nconst getMovieDetails = async (id, abortController) => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/movie/${id}?${params}`, { signal: abortController.signal });\n};\n\nconst getMovieCredits = async (id, abortController) => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/movie/${id}/credits?${params}`, { signal: abortController.signal });\n};\n\nconst getMovieReviews = async (id, abortController) => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/movie/${id}/reviews?${params}`, { signal: abortController.signal });\n};\n\nconst getConfiguration = async () => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/configuration?${params}`);\n};\n\nexport {\n  getTrending,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getConfiguration,\n  INIT_PATH_IMAGE,\n  INIT_LOGO_SIZE,\n  INIT_POSTER_SIZE_500,\n  INIT_POSTER_SIZE_92,\n};\n"],"names":["schema","object","searchString","string","required","SearchForm","_ref","onSubmit","_jsx","Formik","initialValues","values","actions","trim","validationSchema","children","_jsxs","Form","Field","type","name","SearchList","movies","from","map","item","Link","to","concat","id","state","title","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","useEffect","abortController","AbortController","get","searchList","_asyncToGenerator","_regeneratorRuntime","_callee","list","_context","prev","next","searchMovies","sent","data","results","t0","message","toast","stop","_x","_x2","apply","arguments","abort","search","axios","INIT_PATH_IMAGE","INIT_POSTER_SIZE_500","INIT_POSTER_SIZE_92","paramsObj","api_key","getTrending","params","URLSearchParams","signal","abrupt","_ref2","_callee2","paramsObjSearch","_context2","_objectSpread","query","_x3","getMovieDetails","_ref3","_callee3","_context3","_x4","_x5","getMovieCredits","_ref4","_callee4","_context4","_x6","_x7","getMovieReviews","_ref5","_callee5","_context5","_x8","_x9"],"sourceRoot":""}
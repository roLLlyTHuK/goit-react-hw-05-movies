{"version":3,"file":"static/js/149.7139a5ea.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/Api-request.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies &&\n        movies.map(item => (\n          <li key={item.id}>\n            <Link to={`/movies/${item.id}`} state={{ from: location }}>\n              {item.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { Formik, Field, Form } from 'formik';\nimport { object, string } from 'yup';\n\nlet schema = object({\n  searchString: string().required(),\n});\n\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = (values, actions) => {\n    onSubmit(values.searchString.trim());\n  };\n\n  return (\n    <Formik initialValues={{ searchString: '' }} onSubmit={handleSubmit} validationSchema={schema}>\n      <Form>\n        <Field type=\"text\" name=\"searchString\" />\n        <button type=\"submit\">Search</button>\n      </Form>\n    </Formik>\n  );\n};\n","import { searchMovies } from 'services/Api-request';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  // const location = useLocation();\n\n  const onSubmit = searchString => {\n    const searchParams = searchString !== '' ? { search: searchString } : {};\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const searchString = searchParams.get('search');\n\n    if (!searchString) {\n      return;\n    }\n\n    const searchList = async (searchString, abortController) => {\n      try {\n        const list = await searchMovies(searchString, abortController);\n        setMovies(list.data.results);\n      } catch (error) {\n        if (error.message !== 'canceled') toast.error(error.message);\n      }\n    };\n\n    searchList(searchString, abortController);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [searchParams]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={onSubmit} />\n      {movies && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '275d01b8b22dae96d546b5217250e569'\nconst INIT_PATH_IMAGE = 'http://image.tmdb.org/t/p/';\nconst INIT_LOGO_SIZE = 'w185';\nconst INIT_POSTER_SIZE_500 = 'w500';\nconst INIT_POSTER_SIZE_92 = 'w92';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst DEFAULT_POSTER_PATH = 'https://via.placeholder.com/500';\nconst DEFAULT_CAST_PATH = 'https://via.placeholder.com/92';\n\nconst paramsObj = {\n  api_key: API_KEY,\n};\n\nconst getTrending = async abortController => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/trending/movie/day?${params}`, { signal: abortController.signal });\n};\n\nconst searchMovies = async (title, abortController) => {\n  const paramsObjSearch = {\n    ...paramsObj,\n    query: title,\n  };\n  const params = new URLSearchParams(paramsObjSearch);\n  return await axios.get(`/search/movie?${params}`, { signal: abortController.signal });\n};\n\nconst getMovieDetails = async (id, abortController) => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/movie/${id}?${params}`, { signal: abortController.signal });\n};\n\nconst getMovieCredits = async (id, abortController) => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/movie/${id}/credits?${params}`, { signal: abortController.signal });\n};\n\nconst getMovieReviews = async (id, abortController) => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/movie/${id}/reviews?${params}`, { signal: abortController.signal });\n};\n\nconst getConfiguration = async () => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/configuration?${params}`);\n};\n\nexport {\n  getTrending,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getConfiguration,\n  INIT_PATH_IMAGE,\n  INIT_LOGO_SIZE,\n  INIT_POSTER_SIZE_500,\n  INIT_POSTER_SIZE_92,\n  DEFAULT_POSTER_PATH,\n  DEFAULT_CAST_PATH,\n};\n"],"names":["_ref","movies","location","useLocation","_jsx","children","map","item","Link","to","concat","id","state","from","title","schema","object","searchString","string","required","SearchForm","onSubmit","Formik","initialValues","values","actions","trim","validationSchema","_jsxs","Form","Field","type","name","_useState","useState","_useState2","_slicedToArray","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","abortController","AbortController","get","searchList","_asyncToGenerator","_regeneratorRuntime","_callee","list","_context","prev","next","searchMovies","sent","data","results","t0","message","toast","stop","_x","_x2","apply","arguments","abort","search","MoviesList","INIT_PATH_IMAGE","INIT_POSTER_SIZE_500","INIT_POSTER_SIZE_92","axios","DEFAULT_POSTER_PATH","DEFAULT_CAST_PATH","paramsObj","api_key","getTrending","params","URLSearchParams","signal","abrupt","_ref2","_callee2","paramsObjSearch","_context2","_objectSpread","query","_x3","getMovieDetails","_ref3","_callee3","_context3","_x4","_x5","getMovieCredits","_ref4","_callee4","_context4","_x6","_x7","getMovieReviews","_ref5","_callee5","_context5","_x8","_x9"],"sourceRoot":""}
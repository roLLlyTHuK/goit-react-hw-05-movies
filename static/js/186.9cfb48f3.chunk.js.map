{"version":3,"file":"static/js/186.9cfb48f3.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","services/Api-request.jsx"],"sourcesContent":["import { getMovieReviews } from 'services/Api-request';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const getReviews = async (id, abortController) => {\n      try {\n        const result = await getMovieReviews(id, abortController);\n        setReviews(result.data.results);\n      } catch (error) {\n        if (error.message !== 'canceled') toast.error(error.message);\n      }\n    };\n\n    getReviews(movieId, abortController);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews && reviews.length ? (\n        <ul>\n          {reviews.map(item => (\n            <li key={item.id}>\n              <p>{item.author}</p>\n              <p>{item.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don`t have any reviews for this move</p>\n      )}\n    </div>\n  );\n};\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = '275d01b8b22dae96d546b5217250e569'\nconst INIT_PATH_IMAGE = 'http://image.tmdb.org/t/p/';\nconst INIT_LOGO_SIZE = 'w185';\nconst INIT_POSTER_SIZE_500 = 'w500';\nconst INIT_POSTER_SIZE_92 = 'w92';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst DEFAULT_IMAGE_PATH = '../Images/6689609.jpg';\n\nconst paramsObj = {\n  api_key: API_KEY,\n};\n\nconst getTrending = async abortController => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/trending/movie/day?${params}`, { signal: abortController.signal });\n};\n\nconst searchMovies = async (title, abortController) => {\n  const paramsObjSearch = {\n    ...paramsObj,\n    query: title,\n  };\n  const params = new URLSearchParams(paramsObjSearch);\n  return await axios.get(`/search/movie?${params}`, { signal: abortController.signal });\n};\n\nconst getMovieDetails = async (id, abortController) => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/movie/${id}?${params}`, { signal: abortController.signal });\n};\n\nconst getMovieCredits = async (id, abortController) => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/movie/${id}/credits?${params}`, { signal: abortController.signal });\n};\n\nconst getMovieReviews = async (id, abortController) => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/movie/${id}/reviews?${params}`, { signal: abortController.signal });\n};\n\nconst getConfiguration = async () => {\n  const params = new URLSearchParams(paramsObj);\n  return await axios.get(`/configuration?${params}`);\n};\n\nexport {\n  getTrending,\n  searchMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getConfiguration,\n  INIT_PATH_IMAGE,\n  INIT_LOGO_SIZE,\n  INIT_POSTER_SIZE_500,\n  INIT_POSTER_SIZE_92,\n  DEFAULT_IMAGE_PATH,\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","useEffect","abortController","AbortController","getReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","result","_context","prev","next","getMovieReviews","sent","data","results","t0","message","toast","stop","_x","_x2","apply","arguments","abort","_jsx","children","length","map","item","_jsxs","author","content","INIT_PATH_IMAGE","INIT_POSTER_SIZE_500","INIT_POSTER_SIZE_92","axios","DEFAULT_IMAGE_PATH","paramsObj","api_key","getTrending","params","URLSearchParams","concat","signal","abrupt","searchMovies","_ref2","_callee2","title","paramsObjSearch","_context2","_objectSpread","query","_x3","getMovieDetails","_ref3","_callee3","_context3","_x4","_x5","getMovieCredits","_ref4","_callee4","_context4","_x6","_x7","_ref5","_callee5","_context5","_x8","_x9"],"sourceRoot":""}